apply plugin: 'com.android.application'
apply plugin: 'android-apt'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.thedeveloperworldisyours.unitconverterpro"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
final APP_COMPAT_VERSION = '23.4.0'
final ESPRESSO_VERSION = '2.2.1'
final ESPRESSO_RUNNER_VERSION = '0.4'
final DEXMAKER = '1.2'
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])


    compile group: 'com.google.code.gson', name: 'gson', version: '2.4'

    apt 'com.jakewharton:butterknife-compiler:8.2.1'

    compile('com.mikepenz:materialdrawer:5.4.0@aar') {
        transitive = true
    }

    //Test
    testCompile 'junit:junit:4.12'
    testCompile "org.mockito:mockito-core:1.9.5"

    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile "com.google.dexmaker:dexmaker:${DEXMAKER}"
    androidTestCompile "com.google.dexmaker:dexmaker-mockito:${DEXMAKER}"

    androidTestCompile "com.android.support.test:runner:${ESPRESSO_RUNNER_VERSION}"
    androidTestCompile "com.android.support.test:rules:${ESPRESSO_RUNNER_VERSION}"
    androidTestCompile "com.android.support.test.espresso:espresso-core:${ESPRESSO_VERSION}"

    // Dependencies for local unit tests
//    testCompile "junit:junit:$rootProject.ext.junitVersion"
//    testCompile 'org.mockito:mockito-all:1.10.19'
//    testCompile "org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion"
//    testCompile 'org.powermock:powermock-module-junit4:1.10.19'
//    testCompile 'org.powermock:powermock-api-mockito:1.10.19'

    // Android Testing Support Library's runner and rules
//    androidTestCompile "com.android.support.test:runner:$rootProject.ext.runnerVersion"
//    androidTestCompile "com.android.support.test:rules:$rootProject.ext.rulesVersion"
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'com.android.support:support-v4:23.4.0'
    compile 'com.jakewharton:butterknife:8.2.1'
    compile 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar'
    compile 'com.mikepenz:fontawesome-typeface:4.6.0.3@aar'
    compile 'com.mikepenz:community-material-typeface:1.5.54.2@aar'
    compile 'com.mikepenz:ionicons-typeface:2.0.1.2@aar'
    compile 'com.mikepenz:foundation-icons-typeface:3.0.0.2@aar'
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:${APP_COMPAT_VERSION}"
}

/*
All direct/transitive dependencies shared between your test and production APKs need to be
excluded from the test APK! This is necessary because both APKs will contain the same classes. Not
excluding these dependencies from your test configuration will result in an dex pre-verifier error
at runtime. More info in this tools bug: (https://code.google.com/p/android/issues/detail?id=192497)
*/
configurations.compile.dependencies.each { compileDependency ->
    println "Excluding compile dependency: ${compileDependency.getName()}"
    configurations.androidTestCompile.dependencies.each { androidTestCompileDependency ->
        configurations.androidTestCompile.exclude module: "${compileDependency.getName()}"
    }
}
